# map

def multiply_by2(item):
  return item*2

print(list(map(multiply_by2, [1,2,3])))


my_list=[1,2,3,4]
def multiply_by2(item):
  return item*2

print(list(map(multiply_by2, my_list)))
print(my_list) # map doesnot change  outer world



#filter: results what we need according to the given compile

my_list=[1,2,3]
def only_odd(item):
  return item % 2 != 0

print(list(map(only_odd, my_list)))
print(list(filter(only_odd, my_list)))


#zip: zipping two or more items
my_list=[1,2,3]
your_list=[10,23,45]
our_list=[23,45,66]

def only_odd(item):
  return item % 2 != 0

print(list(zip(my_list, your_list, our_list)))


#reduce
my_list= [1,2,3]
from functools import reduce

def accumulator (acc, item):
  print(acc, item)
  return acc+ item
print(reduce(accumulator,my_list, 0)) #print(reduce(function,sequence, 0, initial value of acc))




#EXERCISE
from functools import reduce

#1 Capitalize all of the pet names and print the list
my_pets = ['sisi', 'bibi', 'titi', 'carla']
def capitalize(string):
  return string.upper()
print(list(map(capitalize, my_pets)))



#2 Zip the 2 lists into a list of tuples, but sort the numbers from lowest to highest.
my_strings = ['a', 'b', 'c', 'd', 'e']
my_numbers = [5,4,3,2,1]

print(list(zip(my_strings, sorted(my_numbers))))


#3 Filter the scores that pass over 50%
scores = [73, 20, 65, 19, 76, 100, 88]

def is_smart_student(score):
    return score > 50

print(list(filter(is_smart_student, scores)))

#4 Combine all of the numbers that are in a list on this file using reduce (my_numbers and scores). What is the total?
def accumulator(acc, item):
    return acc + item

print(reduce(accumulator, (my_numbers + scores)))
